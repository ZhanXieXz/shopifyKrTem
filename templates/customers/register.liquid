{%- section 'acc_heading' -%}
<div class="container mt__60 mb__60">
  <div class="row">
     <div class="col-12 offset-md-3 col-md-6  divCreateForm login-form tc">
       {% comment %} Inform customer to check their email to continue the registration - by Viseo {% endcomment%}
       <div id = "successful-register-info" style="display: none; text-align: center"> Please check you email to finalize the creation.  </div>
       {% comment %} End of the information - by Viseo {% endcomment%}

       <div id="CustomerRegisterForm">
         {%- assign formId = 'RegisterForm' -%}
         {%- form 'create_customer', id: formId, novalidate: 'novalidate' -%}
            {%- render 'form-status', form: form, form_id: formId -%}

            <p class="form-row tl">
             <label for="{{ formId }}-FirstName">{{ 'customer.register.first_name' | t }}</label>
             <input type="text" name="customer[first_name]" id="{{ formId }}-FirstName" {% if form.first_name %}value="{{ form.first_name }}"{% endif %} autocomplete="given-name">
            </p>
            <p class="form-row tl">
             <label for="{{ formId }}-LastName">{{ 'customer.register.last_name' | t }}</label>
             <input type="text" name="customer[last_name]" id="{{ formId }}-LastName" {% if form.last_name %}value="{{ form.last_name }}"{% endif %} autocomplete="family-name">
            </p>
            <p class="form-row tl">
             <label for="{{ formId }}-email">{{ 'customer.register.email' | t }} <span class="required">*</span></label>
             <input type="email" name="customer[email]" id="{{ formId }}-email" class="{% if form.errors contains 'email' %} input--error{% endif %}"{% if form.email %} value="{{ form.email }}"{% endif %} autocorrect="off" autocapitalize="off" autocomplete="email" aria-required="true" {%- if form.errors contains 'email' %} class="input--error" aria-invalid="true" aria-describedby="{{ formId }}-email-error"{%- endif -%}>
             {%- if form.errors contains 'email' -%}
               <span id="{{ formId }}-email-error" class="input-error-message">
                 <i class='facl facl-attention cr mr__5'></i>
                 <span>{{ form.errors.translated_fields['email'] | capitalize }} {{ form.errors.messages['email'] }}.</span>
               </span>
             {%- endif -%}
            </p>
           {% comment %} Password will be set during the verification of the email - by Viseo
            <p class="form-row tl">
             <label for="{{ formId }}-password">{{ 'customer.register.password' | t }} <span class="required">*</span></label>
             <input type="password" name="customer[password]" id="{{ formId }}-password" class="{% if form.errors contains 'password' %} input--error{% endif %}" aria-required="true"{%- if form.errors contains 'password' %} class="input--error" aria-invalid="true" aria-describedby="{{ formId }}-password-error"{%- endif -%}>
             {%- if form.errors contains 'password' -%}
               <span id="{{ formId}}-password-error" class="input-error-message">
                 <i class='facl facl-attention cr mr__5'></i>
                 <span>{{ form.errors.translated_fields['password'] | capitalize }} {{ form.errors.messages['password'] }}.</span>
               </span>
             {%- endif -%}
            </p>
           {% endcomment %}
            {% comment %}
            Add fields for birthday, contact number - by Viseo
            {% endcomment %}
            
            <p class="form-row tl">
              <label for="{{ formId }}-birthday" class="label">{{ 'customer.register.birthday' | t }} <span class="required">*</span></label>
              <input type="date" name="customer[note][birthday]" id="{{ formId }}-birthday" class="{% if form.errors contains 'birthday' %} input--error{% endif %}"{% if form.note.birthday %} value="{{ form.birthday }}"{% endif %} autocorrect="off" autocapitalize="off" autocomplete="birthday" aria-required="true" {%- if form.errors contains 'birthday' %} class="input--error" aria-invalid="true" aria-describedby="{{ formId }}-birthday-error"{%- endif -%} size="30"
                     min="1900-01-01"
                     onfocus="setBirthdayLimit(this)"
                     required />
             {%- if form.errors contains 'birthday' -%}
               <span id="{{ formId }}-birthday-error" class="input-error-message">
                 <i class='facl facl-attention cr mr__5'></i>
                 <span>{{ form.errors.translated_fields['birthday'] | capitalize }} {{ form.errors.messages['birthday'] }}.</span>
               </span>
             {%- endif -%}
            </p>
            <p class="form-row tl">
              <label for="{{ formId }}-phone">{{ 'customer.register.phone' | t }} <span class="required">*</span></label>
              <input type="tel" name="customer[phone]" id="{{ formId }}-phone" class="{% if form.errors contains 'phone' %} input--error{% endif %}"{% if form.note.phone %} value="{{ form.note.phone }}"{% endif %} autocorrect="off" autocapitalize="off" autocomplete="phone" aria-required="true" {%- if form.errors contains 'phone' %} class="input--error" aria-invalid="true" aria-describedby="{{ formId }}-phone-error"{%- endif -%} aria-required="true" required minlength="8" val="+82">
             {%- if form.errors contains 'phone' -%}
               <span id="{{ formId }}-phone-error" class="input-error-message">
                 <i class='facl facl-attention cr mr__5'></i>
                 <span>{{ form.errors.translated_fields['phone'] | capitalize }} {{ form.errors.messages['phone'] }}.</span>
               </span>
             {%- endif -%}
              <span class="tips">Please enter Country code, eg. +65 XXXX XXXX</span>
            </p>
            {% comment %}
            End Add fields for birthday, contact number - by Viseo
            {% endcomment %}

            {%- if settings.use_privacy_policy -%}
            <p class="form-row tl">{%- if settings.privacy_policy_link != blank -%}{{ 'customer.register.privacy_policy_html' | t:link: pages[settings.privacy_policy_link].url }}{%- else -%}{{ 'customer.register.privacy_policy' | t }}{%- endif -%}</p>
            {%- endif -%}
            <input id="form-submit" type="submit" value="{{ 'customer.register.submit' | t }}" class="btn mb__25 js_add_ld">
            <p><a href="{{routes.account_login_url}}" class="js_add_ld" id="customer_login_link">{{ 'customer.login_here_html' | t }}</a></p>
         {%- endform -%}
       </div>
     </div>
  </div>
</div>

{% comment %} Script for controlling the registration form - by Viseo {% endcomment %}
<script>
    $(".form-row input").focusout(function(e) {
      if( $(this).val() == ""){
        $(this).addClass("input--error");
        if(!$(this).parent(".form-row").find(".input-error-message").length ){
          if($(this).is("#{{ formId }}-phone")){
            $(this).parent(".form-row").append("<span class='input-error-message'><i class='facl facl-attention cr mr__5'></i>{{ 'customer.register.phone' | t }} can't be blank.</span>");
          }
          if($(this).is("#{{ formId }}-birthday")){
            $(this).parent(".form-row").append("<span class='input-error-message'><i class='facl facl-attention cr mr__5'></i>{{ 'customer.register.birthday' | t }} can't be blank.</span>");
          }
          if($(this).is("#{{ formId }}-email")){
            $(this).parent(".form-row").append("<span class='input-error-message'><i class='facl facl-attention cr mr__5'></i>{{ 'customer.register.email' | t }} can't be blank.</span>");
          }
        }
      }else {
        if($(this).is("#{{ formId }}-phone") && $(this).val().length < 8 ){
          $(this).addClass("input--error");
          if(!$(this).parent(".form-row").find(".input-error-message").length ){
            $(this).parent(".form-row").append("<span class='input-error-message'><i class='facl facl-attention cr mr__5'></i>{{ 'customer.register.phone' | t }} must be Minimum 8 characters.</span>");
          }else {
            $(this).parent(".form-row").find(".input-error-message").html("<i class='facl facl-attention cr mr__5'></i>{{ 'customer.register.phone' | t }} must be Minimum 8 characters.")
          }
          
        }else {
          $(this).removeClass("input--error");
          $(this).parent(".form-row").find(".input-error-message").remove();
        }
      }
    });

    $(".form-row input").change(function(e) {
      if( $(this).val() == ""){
        $(this).addClass("input--error");
        if(!$(this).parent(".form-row").find(".input-error-message").length ){
          if($(this).is("#{{ formId }}-phone")){
            $(this).parent(".form-row").append("<span class='input-error-message'><i class='facl facl-attention cr mr__5'></i>{{ 'customer.register.phone' | t }} can't be blank.</span>");
          }
          if($(this).is("#{{ formId }}-birthday")){
            $(this).parent(".form-row").append("<span class='input-error-message'><i class='facl facl-attention cr mr__5'></i>{{ 'customer.register.birthday' | t }} can't be blank.</span>");
          }
          if($(this).is("#{{ formId }}-email")){
            $(this).parent(".form-row").append("<span class='input-error-message'><i class='facl facl-attention cr mr__5'></i>{{ 'customer.register.email' | t }} can't be blank.</span>");
          }
        }
      }else {
        if($(this).is("#{{ formId }}-phone") && $(this).val().length < 8 ){
          $(this).addClass("input--error");
          if(!$(this).parent(".form-row").find(".input-error-message").length ){
            $(this).parent(".form-row").append("<span class='input-error-message'><i class='facl facl-attention cr mr__5'></i>{{ 'customer.register.phone' | t }} must be Minimum 8 characters.</span>");
          }else {
            $(this).parent(".form-row").find(".input-error-message").html("<i class='facl facl-attention cr mr__5'></i>{{ 'customer.register.phone' | t }} must be Minimum 8 characters.")
          }
        } else if($(this).is("#{{ formId }}-birthday") && (new Date($(this).val()) > new Date((new Date()).valueOf() - 1000*60*60*24) ||  new Date($(this).val()) < new Date("1900-01-01"))) {
          $(this).addClass("input--error");
          $(this).parent(".form-row").append("<span class='input-error-message'><i class='facl facl-attention cr mr__5'></i>please entre a valid birth date</span>");
        } else {
          $(this).removeClass("input--error");
          $(this).parent(".form-row").find(".input-error-message").remove();
        }
      }
    });

    $('#form-submit').on('click',  async (event) => {
      event.preventDefault();

      $(".form-row input").each(function(i, el){
        if ($(el).hasClass("input--error")) {
          $(el).removeClass("input--error");
          $(el).parent(".form-row").find(".input-error-message").remove();
        }
      });

      const email = $('#{{ formId }}-email');
      const phone = $('#{{ formId }}-phone');
      const birthdate = $('#{{ formId }}-birthday');

      var pass = true;
      if( email.val() == "" ){
          pass = false;
        if( !email.hasClass("input--error")){
          email.addClass("input--error");
          email.parent(".form-row").append("<span class='input-error-message'><i class='facl facl-attention cr mr__5'></i>{{ 'customer.register.email' | t }} can't be blank.</span>");
        }
      }else if( !IsEmail(email.val()) ){
          pass = false;
        if( !email.hasClass("input--error")){
          email.addClass("input--error");
          email.parent(".form-row").append("<span class='input-error-message'><i class='facl facl-attention cr mr__5'></i>Please, enter a valid email address.</span>");
        }
      }

      if( phone.val() == "" ){
        pass = false;
        if( !phone.hasClass("input--error")){
          phone.addClass("input--error");
          phone.parent(".form-row").append("<span class='input-error-message'><i class='facl facl-attention cr mr__5'></i>{{ 'customer.register.phone' | t }} can't be blank.</span>");
        }
      }else if( phone.val().length < 8 ) {
        pass = false;
        if( !phone.hasClass("input--error")){
          phone.addClass("input--error");
          phone.parent(".form-row").append("<span class='input-error-message'><i class='facl facl-attention cr mr__5'></i>{{ 'customer.register.phone' | t }} must be Minimum 8 characters.</span>");
        }
      }

      if( birthdate.val() == "" ){
        pass = false;
        if( !birthdate.hasClass("input--error")){
          birthdate.addClass("input--error");
          birthdate.parent(".form-row").append("<span class='input-error-message'><i class='facl facl-attention cr mr__5'></i>{{ 'customer.register.birthday' | t }} can't be blank.</span>");
        }
      } else if (new Date(birthdate.val()) > new Date((new Date()).valueOf() - 1000*60*60*24) || new Date(birthdate.val()) < new Date("1900-01-01")) {
        pass = false;
        if( !birthdate.hasClass("input--error")) {
          birthdate.addClass("input--error");
          birthdate.parent(".form-row").append("<span class='input-error-message'><i class='facl facl-attention cr mr__5'></i>please entre a valid birth date</span>");
        }
      }

      if(pass) {
        $('#form-submit').attr('disabled', true).val("{{ 'customer.register.onSubmit' | t }}");
        let birthday = new Date(birthdate.val());
        let customerData = {
          'first_name': $('#{{ formId }}-FirstName').val(),
          'last_name': $('#{{ formId }}-LastName').val(),
          'email': email.val(),
          'note': birthday.getDate() + "/" + (birthday.getMonth() + 1) + "\nyear:" + birthday.getFullYear(),
          'phone': phone.val()
        }

        let postOptions = {
          method: 'POST',
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(customerData)
        }
        fetch("/apps/customer/register", postOptions)
          .then(response => {
            if (response.status !== 200) {
              response.json().then(result => {
                const errors = result.errors;
                if (errors.email) {
                  email.addClass("input--error");
                  email.parent(".form-row").append("<span class='input-error-message'><i class='facl facl-attention cr mr__5'></i>" + errors.email[0] + "</span>");
                  if (errors.email[0].includes('has already been taken')) {
                    const formData = new FormData()
                    formData.append('form_type', 'create_customer');
                    formData.append('utf8', '✓');
                    formData.append('customer[email]', email.val());
                    formData.append('customer[password]', "tempPassword");

                    fetch('/account', {
                      method: 'post',
                      body: formData
                    }).then(response => {
                      console.log(response);
                      window.location.href = response.url;
                    }).catch(error => {
                      console.error(error);
                    });
                  }
                }

                if (errors.phone) {
                  phone.addClass("input--error");
                  phone.parent(".form-row").append("<span class='input-error-message'><i class='facl facl-attention cr mr__5'></i>" + errors.phone[0] + "</span>");
                }
              });

              $('#form-submit').attr('disabled', false).val("{{ 'customer.register.submit' | t }}");
              return;
            }

            $('#CustomerRegisterForm').hide();
            $('#successful-register-info').show();
            $('#form-submit').attr('disabled', false).val("{{ 'customer.register.submit' | t }}");
          });
      }
      
    });

    $("#{{ formId }}-phone").keypress(function (e) {
      var charCode = !e.charCode ? e.which : e.charCode;
      // 44 -> , 45 -> - 46 -> . 47 -> /
      if (charCode >= 44 && charCode <= 47) {
        e.preventDefault();
      }
      if (charCode > 57 || charCode < 43) {
        e.preventDefault();
      }
    });
    function IsEmail(email) {
        var regex = /^([a-zA-Z0-9_\.\-\+])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        if(!regex.test(email)) {
            return false;
        }else{
            return true;
        }
    }

    function setBirthdayLimit(birthdayInput) {
      birthdayInput.max = new Date((new Date()).valueOf() - 1000*60*60*24).toISOString().split('T')[0];
    }
</script>
{% comment %} End of Script - by Viseo {% endcomment %}